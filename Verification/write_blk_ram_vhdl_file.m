% ECE 6276 DSP HW chip design final project
% Write hdl file for RAM for output image scaled down by two
% Author: Navdeep Dahiya
% 11/16/2018
clc
clear
close all
%in = imread('peppers.png');
I = imread('300by300.jpg');
if (length(size(I)) > 2)
    I = rgb2gray(I);
end
%I = imresize(I,[400 600]);
%I = I(1:16,1:16); % Crop image for now
imshow(I);

num_elements = length(I(:));
size = int32(num_elements/4)-1;

% Writing vhd file

% Header comments
header = ['--Engineer     : Navdeep Dahiya\n--'...
    'Date         : 11/15/2018\n'...
    '--Name of file : block_ram.vhd\n'...
    '--Description  : module RAM as block ram\n\n'];

includes = ['library ieee;\n'...
            'use ieee.std_logic_1164.all;\n'...
            'use ieee.numeric_std.all;\n\n'];

entity = sprintf(['entity blk_ram is\n'...
          '  port (\n'...
          '\t-- input side\n'...
          '\tclk\t: in std_logic;\n'...
          '\trst\t: in std_logic;\n'...
          '\twr_address\t: in integer range 0 to %d;\n'...
          '\trd_address\t: in integer range 0 to %d;\n'...
          '\twe\t: in std_logic;\n'...
          '\t--output side\n'...
          '\tdata_i\t: in std_logic_vector(7 downto 0);\n'...
          '\tdata_o\t: out std_logic_vector(7 downto 0)\n'...
          '\t);\n'...
          'end blk_ram;\n\n'],size,size);%addr_bits-1);


architecture = sprintf(['architecture arch of blk_ram is\n\n'...
     'type ram_t is array(0 to %d) of std_logic_vector(7 downto 0);\n\n']...
     ,size);

ram_signal = ['signal ram : ram_t := (others => "10100000");\n'];

process = ['begin\n\n'...
           'process(clk)\n'...
           'begin\n'...
           '  if(rising_edge(clk)) then\n'...
           '    if (we = ''1\'') then\n'...
           '      ram(wr_address) <= data_i;\n'...
           '    end if;\n'...
           '    if (rst = ''1'') then\n' ...
           '      data_o <= "00000000";\n'...
           '    else\n' ....
           '      data_o <= ram(rd_address);\n'...
           '    end if;\n'...
           '  end if;\n'...
           'end process;\n'...
           'end arch;\n'];

% Write to actual rom vhd file
fileID = fopen('blk_ram.vhd','w');
fprintf(fileID,header);
fprintf(fileID,includes);
fprintf(fileID,entity);
fprintf(fileID,architecture);
fprintf(fileID,ram_signal);
fprintf(fileID,process);
fclose(fileID);
